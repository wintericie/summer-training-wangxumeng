<!DOCTYPE html>
<meta charset="utf-8">
<title>Streamgraph</title>
<style>

body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  margin: auto;
  position: relative;
  width: 960px;
}

</style>
<button onclick="transition()">Update</button>
<button onclick="change()">Change</button>
<script src="d3.min.js"></script>
<script>

var o = ["silhouette","zero","wiggle","expand"];

var num = 0;

var n = 20, // number of layers
    m = 200, // number of samples per layer
    stack = d3.layout.stack().offset(o[num]).order("inside-out");

var bum1 = d3.range(n).map(function() { return bumpLayer(m); }),
    bum2 = d3.range(n).map(function() { return bumpLayer(m); });

var layers0 = stack(bum1),
    layers1 = stack(bum2);

var width = 960,
    height = 500;

var x = d3.scale.linear()
    .domain([0, m - 1])
    .range([0, width]);

var y = d3.scale.linear()
    .domain([0, d3.max(layers0.concat(layers1), function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); })])
    .range([height,50]);

var color = d3.scale.linear()
    .range(["#00FF00", "#000000"]);

var area = d3.svg.area()
    .x(function(d) { return x(d.x); })
    .y0(function(d) { return y(d.y0); })
    .y1(function(d) { return y(d.y0 + d.y); });

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svg.selectAll("path")
    .data(layers0)
  .enter().append("path")
    .attr("d", area)
    .style("fill", function() { return color(Math.random()); });
    
// change the dataset.
function transition() {
  d3.selectAll("path")
      .data(function() {
        var d = layers1;
        layers1 = layers0;
        return layers0 = d;
      })
    .transition()
      .duration(500)
      .attr("d", area);
}

// change the offset.
function change() {
  num = num + 1;
  if(num > 3) {
    location.reload();
    num = 0;
  }  
  stack = d3.layout.stack().offset(o[num]).order("inside-out");
  layers0 = stack(bum1),
  layers1 = stack(bum2);
  y = d3.scale.linear()
    .domain([0, d3.max(layers0.concat(layers1), function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); })])
    .range([height,50]);
    area = d3.svg.area()
    .x(function(d) { return x(d.x); })
    .y0(function(d) { return y(d.y0); })
    .y1(function(d) { return y(d.y0 + d.y); });
  d3.selectAll("path")
    .transition()
      .duration(500)
      .attr("d", area);
}

// Inspired by Lee Byron's test data generator.
function bumpLayer(n) {

  function bump(a) {
    var x = 1 / (.1 + Math.random()),
        y = 2 * Math.random() - .5,
        z = 10 / (.1 + Math.random());
    for (var i = 0; i < n; i++) {
      var w = (i / n - y) * z;
      a[i] += x * Math.exp(-w * w);
    }
  }

  var a = [], i;
  for (i = 0; i < n; ++i) a[i] = 0;
  for (i = 0; i < 5; ++i) bump(a);
  return a.map(function(d, i) { return {x: i, y: Math.max(0, d)}; });
}

</script>
